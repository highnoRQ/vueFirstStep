let chalk,nodemon,commandOptionsDefaults,serverUrl;_7d8‍.x([["default",()=>_7d8‍.o]]);_7d8‍.w("chalk",[["default",["chalk"],function(v){chalk=v}]]);_7d8‍.w("nodemon",[["default",["nodemon"],function(v){nodemon=v}]]);_7d8‍.w("../config",[["commandOptionsDefaults",["commandOptionsDefaults"],function(v){commandOptionsDefaults=v}]]);_7d8‍.w("../utils/serverUrl",[["default",["serverUrl"],function(v){serverUrl=v}]]);




const _7d8‍anonymous=({
  srvPath,
}) => args => {
  return new Promise((resolve, reject) => {
    nodemon({
      exec: `npx vue-cli-service express:run --delay ${getFlatArgs(args)}`,
      watch: [srvPath],
      ext: 'js mjs json ts',
    });

    nodemon.on('restart', () => {
      console.log();
      _7d8‍.g.console.log(chalk.bold.green(`  ⏳  Express server is restarting...`));
    });

    nodemon.on('crash', () => {
      console.log();
      _7d8‍.g.console.log(chalk.bold.red(`  💥  Express server crashed!`));
      _7d8‍.g.console.log(chalk.red(`     Waiting for changes...`));
    });

    nodemon.on('stdout', (...params) => {
      _7d8‍.g.console.log(chalk.grey(...params));
    });

    nodemon.on('stderr', (...params) => {
      _7d8‍.g.console.log(chalk.grey(...params));
    });

    nodemon.on('quit', () => {
      resolve();
      serverUrl.deleteFile();
      process.exit();
    });
  });
};_7d8‍.d(_7d8‍anonymous);

const getFlatArgs = (args) =>
  Object.keys(commandOptionsDefaults)
    .filter(option => args.hasOwnProperty(option))
    .map(option => {
      const value = args[option];
      return `--${option}` + (value !== true ? ` ${value}` : '');
    })
    .join(' ');
